<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Docker Swarm on TeSLA CE</title><link>https://tesla-ce.github.io/installation/install/swarm/</link><description>Recent content in Docker Swarm on TeSLA CE</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><copyright>Copyright Â© 2021 TeSLA CE</copyright><atom:link href="https://tesla-ce.github.io/installation/install/swarm/index.xml" rel="self" type="application/rss+xml"/><item><title>Requirements</title><link>https://tesla-ce.github.io/installation/install/swarm/requirements/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://tesla-ce.github.io/installation/install/swarm/requirements/</guid><description>In order to work, TeSLA CE needs a set of services ready to use:
Services:
Database (MySQL, PostgreSQL) HashiCorp Vault RabbitMQ Redis MinIO and:
A valid DNS domain name pointing to the Docker Swarm cluster Access from the installation computer to all services Access from the cluster to all services Permission to deploy services on the Docker Swarm cluster Although for production deployments it is recommended to use customized instances of the services, it is possible to deploy such services as part of the TeSLA CE deployment.</description></item><item><title>Getting Started</title><link>https://tesla-ce.github.io/installation/install/swarm/getting_started/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://tesla-ce.github.io/installation/install/swarm/getting_started/</guid><description>For the installation process, you will need a computer with Python 3 installed. It is highly recommended using a virtual environment.
python -m venv venv source venv/bin/activate pip install tesla-ce Alternatively, you can use a docker image to run the installation commands:
docker run -it -v &amp;#34;$PWD&amp;#34;:/tesla teslace/core /bin/bash source /venv/bin/activate In both cases, the tesla_ce command will be available. You can try:
tesla_ce tesla_version</description></item><item><title>Configuration</title><link>https://tesla-ce.github.io/installation/install/swarm/configuration/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://tesla-ce.github.io/installation/install/swarm/configuration/</guid><description>TeSLA CE use a configuration file tesla-ce.cfg to store all options and credentials. This file can be generated by:
tesla_ce generate_config --local [--with-services] &amp;lt;domain&amp;gt; Where domain should be a valid domain name pointing to the Docker Swarm cluster.
The optional with-services flag will generate random credentials for services. Use this flag if you plan to deploy services as part of the TeSLA CE deployment (see Deploy Services).
Otherwise, change the configuration options to provide the correct information to access the services.</description></item><item><title>Deploy Services</title><link>https://tesla-ce.github.io/installation/install/swarm/services/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://tesla-ce.github.io/installation/install/swarm/services/</guid><description>Deploy services as part of TeSLA CE installation is not recommended for production. Skip this step if you already have your services deployed.
Requirements Some services need to be publicly accessible. You will need to create subdomains:
vault.&amp;lt;domain&amp;gt; storage.&amp;lt;domain&amp;gt; rabbitmq.&amp;lt;domain&amp;gt; that points to your Docker Swarm cluster.
Generate deployment scripts To generate all scripts to deploy services on your cluster, run:
tesla_ce deploy_services This command will create a folder deploy with:</description></item><item><title>Initialize</title><link>https://tesla-ce.github.io/installation/install/swarm/initialize/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://tesla-ce.github.io/installation/install/swarm/initialize/</guid><description>Double check that all required services are running and accessible before trying this step.
Once the configuration options are set on the configuration file, in this step we will prepare all the services to be used. First check that configuration is valid:
tesla_ce reconfigure --check And finally apply the configuration:
tesla_ce reconfigure This command will initialize all the services to be ready for TeSLA CE deployment.
Depending on the services and connection performance, some actions can take longer than default HTTP timeout.</description></item><item><title>Deploy TeSLA CE</title><link>https://tesla-ce.github.io/installation/install/swarm/core/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://tesla-ce.github.io/installation/install/swarm/core/</guid><description>If you have deployed the services as part of the TeSLA CE deployment process, you should skip the network creation and load balancer deployment.
Generate deployment scripts To generate all scripts to deploy the TeSLA CE core on your cluster, run:
tesla_ce deploy_core This command will create a folder deploy with:
config: Folder with required configuration files secrets: Folder with required secret files tesla_lb.yml: Docker Stack file for the Load Balancer tesla_core.</description></item></channel></rss>